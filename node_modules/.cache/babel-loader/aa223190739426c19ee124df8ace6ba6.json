{"ast":null,"code":"var _jsxFileName = \"/home/subhankar/Desktop/ContactAdministrator-ReactJS/src/components/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport { v4 as uuid } from \"uuid\";\nimport api from \"../api/contacts\";\nimport \"./App.css\";\nimport Header from \"./Header\";\nimport AddContact from \"./AddContact\";\nimport ContactList from \"./ContactList\";\nimport ContactDetail from \"./ContactDetail\";\nimport EditContact from \"./EditContact\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const LOCAL_STORAGE_KEY = \"contacts\";\n  const [contacts, setContacts] = useState([]);\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [searchResults, setSearchResults] = useState([]); //RetrieveContacts\n\n  const retrieveContacts = async () => {\n    const response = await api.get(\"/contacts\");\n    return response.data;\n  };\n\n  const addContactHandler = async contact => {\n    console.log(contact);\n    const request = {\n      id: uuid(),\n      ...contact\n    };\n    const response = await api.post(\"/contacts\", request);\n    console.log(response);\n    setContacts([...contacts, response.data]);\n  };\n\n  const updateContactHandler = async contact => {\n    const response = await api.put(`/contacts/${contact.id}`, contact);\n    const {\n      id,\n      name,\n      email\n    } = response.data;\n    setContacts(contacts.map(contact => {\n      return contact.id === id ? { ...response.data\n      } : contact;\n    }));\n  };\n\n  const removeContactHandler = async id => {\n    await api.delete(`/contacts/${id}`);\n    const newContactList = contacts.filter(contact => {\n      return contact.id !== id;\n    });\n    setContacts(newContactList);\n  };\n\n  const searchHandler = searchTerm => {\n    setSearchTerm(searchTerm);\n\n    if (searchTerm !== \"\") {\n      const filteredList = contacts.filter(contact => {\n        return Object.values(contact).join(\" \").toLowerCase().includes(searchTerm.toLowerCase());\n      });\n      setSearchResults(filteredList);\n    } else {\n      setSearchResults(contacts);\n    }\n  };\n\n  useEffect(() => {\n    // const retriveContacts = JSON.parse(localStorage.getItem(LOCAL_STORAGE_KEY));\n    // if (retriveContacts) setContacts(retriveContacts);\n    const getAllCOntacts = async () => {\n      const allContacts = await retrieveContacts();\n      if (allContacts) setContacts(allContacts);\n    };\n\n    getAllCOntacts();\n  }, []);\n  useEffect(() => {//localStorage.setItem(LOCAL_STORAGE_KEY, JSON.stringify(contacts));\n  }, [contacts]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"ui container\",\n    children: /*#__PURE__*/_jsxDEV(Router, {\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Switch, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\",\n          exact: true,\n          render: props => /*#__PURE__*/_jsxDEV(ContactList, { ...props,\n            contacts: searchTerm.length < 1 ? contacts : searchResults,\n            getContactId: removeContactHandler,\n            term: searchTerm,\n            searchKeyword: searchHandler\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/add\",\n          render: props => /*#__PURE__*/_jsxDEV(AddContact, { ...props,\n            addContactHandler: addContactHandler\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/edit\",\n          render: props => /*#__PURE__*/_jsxDEV(EditContact, { ...props,\n            updateContactHandler: updateContactHandler\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/contact/:id\",\n          component: ContactDetail\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"kpecTpqg2u2phJc7RwMHIqjxK8M=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/subhankar/Desktop/ContactAdministrator-ReactJS/src/components/App.js"],"names":["React","useState","useEffect","BrowserRouter","Router","Switch","Route","v4","uuid","api","Header","AddContact","ContactList","ContactDetail","EditContact","App","LOCAL_STORAGE_KEY","contacts","setContacts","searchTerm","setSearchTerm","searchResults","setSearchResults","retrieveContacts","response","get","data","addContactHandler","contact","console","log","request","id","post","updateContactHandler","put","name","email","map","removeContactHandler","delete","newContactList","filter","searchHandler","filteredList","Object","values","join","toLowerCase","includes","getAllCOntacts","allContacts","props","length"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport { v4 as uuid } from \"uuid\";\nimport api from \"../api/contacts\";\nimport \"./App.css\";\nimport Header from \"./Header\";\nimport AddContact from \"./AddContact\";\nimport ContactList from \"./ContactList\";\nimport ContactDetail from \"./ContactDetail\";\nimport EditContact from \"./EditContact\";\n\nfunction App() {\n  const LOCAL_STORAGE_KEY = \"contacts\";\n  const [contacts, setContacts] = useState([]);\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [searchResults, setSearchResults] = useState([]);\n  //RetrieveContacts\n  const retrieveContacts = async () => {\n    const response = await api.get(\"/contacts\");\n    return response.data;\n  };\n\n  const addContactHandler = async (contact) => {\n    console.log(contact);\n    const request = {\n      id: uuid(),\n      ...contact,\n    };\n\n    const response = await api.post(\"/contacts\", request);\n    console.log(response);\n    setContacts([...contacts, response.data]);\n  };\n\n  const updateContactHandler = async (contact) => {\n    const response = await api.put(`/contacts/${contact.id}`, contact);\n    const { id, name, email } = response.data;\n    setContacts(\n      contacts.map((contact) => {\n        return contact.id === id ? { ...response.data } : contact;\n      })\n    );\n  };\n\n  const removeContactHandler = async (id) => {\n    await api.delete(`/contacts/${id}`);\n    const newContactList = contacts.filter((contact) => {\n      return contact.id !== id;\n    });\n\n    setContacts(newContactList);\n  };\n  const searchHandler = (searchTerm) => {\n    setSearchTerm(searchTerm);\n    if(searchTerm!==\"\"){\n      const filteredList = contacts.filter((contact) => {\n        return Object.values(contact)\n          .join(\" \")\n          .toLowerCase()\n          .includes(searchTerm.toLowerCase());\n      });\n      setSearchResults(filteredList);\n    }\n    else{\n      setSearchResults(contacts);\n    }  \n  };\n  useEffect(() => {\n    // const retriveContacts = JSON.parse(localStorage.getItem(LOCAL_STORAGE_KEY));\n    // if (retriveContacts) setContacts(retriveContacts);\n    const getAllCOntacts = async () => {\n      const allContacts = await retrieveContacts();\n      if (allContacts) setContacts(allContacts);\n    };\n\n    getAllCOntacts();\n  }, []);\n\n  useEffect(() => {\n    //localStorage.setItem(LOCAL_STORAGE_KEY, JSON.stringify(contacts));\n  }, [contacts]);\n\n  return (\n    <div className=\"ui container\">\n      <Router>\n        <Header />\n        <Switch>\n          <Route\n            path=\"/\"\n            exact\n            render={(props) => (\n              <ContactList\n                {...props}\n                contacts={searchTerm.length < 1 ? contacts : searchResults}\n                getContactId={removeContactHandler}\n                term={searchTerm}\n                searchKeyword={searchHandler}\n              />\n            )}\n          />\n          <Route\n            path=\"/add\"\n            render={(props) => (\n              <AddContact {...props} addContactHandler={addContactHandler} />\n            )}\n          />\n\n          <Route\n            path=\"/edit\"\n            render={(props) => (\n              <EditContact\n                {...props}\n                updateContactHandler={updateContactHandler}\n              />\n            )}\n          />\n\n          <Route path=\"/contact/:id\" component={ContactDetail} />\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}